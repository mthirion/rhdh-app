apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: my-testapp-template
  title: A simple demo template with Quarkus, ArgoCD and a Tekton Pipeline
  description: Create a simple service using Quarkus with ArgoCD and a Tekton Pipeline
  tags:
    - recommended
    - java
    - quarkus
    - maven
spec:
  owner: mthirion
  type: service
  parameters:
    - title: Provide Information for Application
      required:
        - component_id
        - java_package_name
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
          default: rhdh-testapp
          ui:field: EntityNamePicker
          maxLength: 14
        group_id:
          title: Group Id
          type: string
          default: com.redhat.rhdh.demo
          description: Maven Group Id
        artifact_id:
          title: Artifact Id
          type: string
          default: testapp
          description: Maven Artifact Id
        java_package_name:
          title: Java Package Name
          default: com.redhat.rhdh.demo
          type: string
          description: Name for the java package. eg (com.redhat...)
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
          default: A test app
    - title: Provide Image Registry Information
      required:
        - image_registry
      properties:
        image_registry:
          title: Image Registry
          type: string
          enum:
            - Openshift
            - Quay
          default: Openshift
      dependencies:
        image_registry:
          oneOf:
            - properties:
                image_registry:
                  enum:
                    - Openshift
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: default-route-openshift-image-registry.apps.ocp4.mthirion.eu
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
            - properties:
                image_registry:
                  enum:
                    - Quay
                image_host:
                  title: Image Host
                  type: string
                  description: Host for storing image
                  default: quay-wsprf.apps.cluster-wsprf.sandbox1967.opentlc.com
                image_organization:
                  title: Organization
                  type: string
                  description: Name of the Quay Organization
                  default: quayadmin
                image_tag:
                  title: Image Tag
                  default: latest
                  type: string
                  description: Build Image tag
    - title: Application repository Information
      required:
        - repo
      properties:
        repo:
          title: Repository Location
          type: object
          properties:
            host:
              title: Repo Host
              type: string
              description: Your SCM host
              default: github.com
              enum:
                - github.com
            owner:
              title: Repo Owner
              type: string
              description: Your SCM host organization/group
              default: mthirion
              enum:
                - mthirion

  steps:
    - id: template
      name: resolving ./skeleton from template directory
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutTemplating:
          - .github/workflows/*
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          namespace: ${{ parameters.component_id }}-dev
          group_id: ${{ parameters.group_id }}
          artifact_id: ${{ parameters.artifact_id }}
          java_package_name: ${{ parameters.java_package_name }}
          owner: ${{ parameters.repo.owner }}
          cluster: .apps.ocp4.mthirion.eu
          host: ${{ parameters.repo.host }}
          destination: ${{ parameters.repo.owner }}/${{ parameters.component_id }}
          quay_destination: ${{ parameters.image_organization}}/${{ parameters.component_id }}
          port: 8080

    - id: publish
      name: Create app-specific github repository
      action: publish:github
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}"
        description: "rhdh test repo created"
        repoVisibility: public

    - id: gitops-files
      name: Clone app-specific repository to resolve variables
      action: fetch:template
      input:
        url: ./manifests
        copyWithoutTemplating: []
        values:
          component_id: ${{ parameters.component_id }}
          description: ${{ parameters.description }}
          destination: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}-gitops.git
          source_repository: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{parameters.component_id}}.git
          repository_name: ${{parameters.component_id}}
          git_owner: ${{ parameters.repo.owner }}
          cluster: .apps.ocp4.mthirion.eu
          namespace: ${{ parameters.component_id }}-dev
          image_registry: ${{ parameters.image_registry }}
          image_host: ${{ parameters.image_host }}
          image_organization: ${{ parameters.image_organization }}
          image_name: ${{ parameters.component_id }}
          image_tag: ${{ parameters.image_tag }}
          port: 8080
          repository_host: ${{ parameters.repo.host }}
          deployment_name: mydemo-quarkus-template
          user: ${{ user.entity.metadata.name }}
        targetPath: ./tenant-gitops

    - id: publish-gitops
      name: Creating the Gitops repository on github
      action: publish:github
      input:
        repoUrl: "${{ parameters.repo.host }}?owner=${{ parameters.repo.owner }}&repo=${{parameters.component_id}}-gitops"
        title: gitops resources for ${{ parameters.component_id }}
        description: gitops resources for ${{ parameters.component_id }}
        sourcePath: ./tenant-gitops
        repoVisibility: public

    - id: create-argocd-resources
      name: Create ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.component_id }}-bootstrap
        argoInstance: argocd-local1
        namespace: openshift-gitops
        repoUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}-gitops.git
        path: 'argocd/'

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: https://${{ parameters.repo.host }}/${{ parameters.repo.owner }}/${{ parameters.component_id }}/tree/master
        catalogInfoPath: "/catalog-info.yaml"
